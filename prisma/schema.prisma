// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["createMany"]
}

model User {
  id             String    @id
  email          String    @unique
  password       String
  savedCompanies Company[] @relation("savedCompanies")
  company        Company?
}

model BuyerRequest {
  id              String  @id
  companyId       String
  company         Company @relation(fields: [companyId], references: [id])
  productName     String
  destinationPort String
  paymentMethod   String
  other           String
}

model SellerRequest {
  id        String  @id
  companyId String
  company   Company @relation(fields: [companyId], references: [id])
  request   String
}

model Company {
  id                String           @id
  user              User             @relation(fields: [userId], references: [id])
  userId            String
  country           String
  name              String
  typeOfIndustry    String
  address           String
  website           String
  email             String
  phoneNumber       String
  img               String?
  productCategories String[]
  buyingCategories  String[]
  requestAsBuyer    BuyerRequest?
  requestAsSeller   SellerRequest?
  savedUsers        User[]           @relation("savedCompanies")
  personInCharge    PersonInCharge[]
  product           Product[]
}

model PersonInCharge {
  id          String  @id
  companyId   String
  company     Company @relation(fields: [companyId], references: [id])
  name        String
  nationality String
  email       String
  phoneNumber String
  img         String?
}

model Product {
  id                   String   @id
  companyId            String
  company              Company  @relation(fields: [companyId], references: [id])
  category             String
  name                 String
  description          String
  img                  String[]
  isHalal              Boolean
  minimumOrderQuantity String
}

// enum Role {
//   UNSPECIFIED
//   BUYER
//   SELLER
// }

// model User {
//   id              String          @id
//   email           String          @unique
//   password        String
//   role            Role            @default(UNSPECIFIED)
//   company         Company?
//   PersonInCharge  PersonInCharge?
//   productCategory String[]
// }

// model Company {
//   id             String          @id
//   country        String
//   name           String
//   type           String
//   address        String
//   website        String
//   email          String
//   phone          String
//   request        String
//   img            String?
//   user           User            @relation(fields: [userId], references: [id])
//   userId         String
//   createdAt      DateTime        @default(now())
//   personInCharge PersonInCharge? @relation(name: "company")
//   products       Product[]
//   SavedCompany   SavedCompany[]
// }

// model PersonInCharge {
//   id           String         @id
//   name         String
//   nationality  String
//   email        String
//   phone        String
//   img          String?
//   company      Company        @relation(name: "company", fields: [companyId], references: [id])
//   companyId    String
//   SavedCompany SavedCompany[]
//   user         User           @relation(fields: [userId], references: [id])
//   userId       String
// }

// model SavedCompany {
//   id               Int            @id @default(autoincrement())
//   personInCharge   PersonInCharge @relation(fields: [personInChargeId], references: [id])
//   personInChargeId String         @unique
//   companies        Company[]
// }

// model Product {
//   id                   String   @id
//   category             String
//   name                 String
//   description          String
//   img                  String[]
//   isHalal              Boolean
//   minimumOrderQuantity String
//   company              Company  @relation(fields: [companyId], references: [id])
//   companyId            String
// }
